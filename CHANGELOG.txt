#CHANGELOG
#Markdown

## [Unreleased]

### Added


### Changed


## [1.0.0]
### Added
-초기 프로젝트 설정(npm init, 기본 패키지 설정)
-Vue.js 프로젝트 초기화

###디자인 패턴 설계: 
1. vite.config 파일: component를 import 하기 쉽게 수정.
2. assets/images, assets/styles 폴더 생성.
3. assets/images/color.scss, font.scss, main.scss 파일 생성. 
  3-1. color.scss: 전역적으로 변수화.
  3-2. main.scss: color와 font 파일을 import함. 
  3-3. font.scss: 구글 폰트로 추출.
4. routes/index.js 파일 생성. 라우팅 테이블을 정의하고 페이지를 구분하고, 각 컴포넌트를 연결하고자 함.
  4-1. Vue Router 설정 
  4-2. 라우팅 테이블 정의
  4-3. 페이지 구분 및 각 컴포넌트 연결 설정 
  4-4. `Home` 컴포넌트와 기본 경로 `/` 연결.
  4-5. import로 Home 연결.
5. pages/index.vue 파일 생성.
  5-1. page 클래스 생성 후 styles에서 css 속성 정의.
  5-2. main.js에 routes import함. method 체이닝.
6. npm install --save-dev sass로 오류 해결.
  ---페이지 컴포넌트 라우팅 완료---
7. components에 폴더 atoms,molecules,organisms 파일 생성
  7-1. organisms/index.vue 생성 
  7-2. div class page 안에 header와 body 태그 생성.
  7-3. index.vue 웹 퍼블리싱
8. organisms/index.vue을 pages/index.vue에 import, components에 추가
9. index.vue 웹 퍼블리싱 
  9-1. page__body__main 안에 data-box, data-box__graph-box 생성 후 웹 퍼블리싱
  9-2. data-box를 디테일하게 다루기 위해 molecules/WeatherBox.vue, weather-box__icon-box, detail 생성 후 웹 퍼블리싱
10. molecules/WeatherBox.vue을 organisms/index.vue에 import, components에 추가 후 data-box 클래스 안에 태그 삽입.
11. molucules/Map.vue 생성(후에 카카오 맵 매핑 예정)  
  11-1. Map id 생성 후 css 스타일 적용
  11-2. organisms/index.vue에 import, components에 추가 후 page__body__main 클래스 안에 태그 삽입.
12. molecules/DailyWeather.vue 파일 생성. 시간대별 날씨 데이터를 보여주는 UI 컴포넌트 제작.
  12-1. 최고온도, 최저온도, 아이콘 클래스 생성 후 아이콘 클래스도 생성. 후 웹 퍼블리싱.
  12-2. molecules/DailyWeather.vue을 organisms/index.vue에 import, components에 추가 후 page__body__daily 클레스 안에 삽입.
13. molecules/Graph.vue 파일 생성 
  13-1. 전체적인 graph 클래스 안의 outer, inner, middle 등을 생성 후 스타일리싱 적용.
  13-2. organisms/index.vue에 import, components에 추가 후 data-box__graph-box 클래스 안에 태그 삽입.

edit 버전
### 디자인 패턴 설계 
  -vite.config.js 파일**: component를 import 하기 쉽게 수정 
  - **폴더 및 파일 생성**: 
    1. `assets/images`, `assets/styles` 폴더 생성 
    2. `assets/styles/color.scss`, `font.scss`, `main.scss` 파일 생성 
      - color.scss: 전역 변수 정의 
      - main.scss: color와 font 파일 import 
      - font.scss: 구글 폰트 import 
  - routes/index.js 파일 생성: 라우팅 테이블 정의 및 페이지 구분 
    - Vue Router 설정 
    - 라우팅 테이블 정의 
    - 페이지 구분 및 각 컴포넌트 연결 설정 
    - `Home` 컴포넌트와 기본 경로 `/` 연결 
    - pages/index.vue 파일 생성: page 클래스 생성 및 스타일 정의 
### 설치 및 오류 해결 
  - **npm install --save-dev sass**: SCSS 오류 해결 
### 페이지 컴포넌트 라우팅 완료 
  - **components 폴더 생성**: atoms, molecules, organisms 파일 생성 
  - **organisms/index.vue 생성**: 기본 레이아웃 설정 및 웹 퍼블리싱 
  - **organisms/index.vue를 pages/index.vue에 import 및 추가** 
### 웹 퍼블리싱 
  - components의 폴더 및 파일 생성: 
    - div class page 안에 header와 body 태그 생성 및 퍼블리싱 
  - molecules/WeatherBox.vue 생성: weather-box__icon-box, detail 생성 및 퍼블리싱 
  - molecules/Map.vue 생성: Map id 생성 후 css 스타일 적용 
  - molecules/DailyWeather.vue 파일 생성: 시간대별 날씨 데이터를 보여주는 UI 컴포넌트 제작 
  - molecules/Graph.vue 파일 생성: 그래프 클래스 생성 후 스타일링 적용

## [1.0.1]
### Added
-API 연동 후 동적 데이터 바인딩 성공.
-이미지 연동.
-dayjs로 현재를 불러옴.

### 데이터 바인딩
  -npm install axios 설치 후 import
  -organisms/index.vue에 나의 api 키 값을 입력하고 get()함수를 이용해 API 호출.
  -WeatherBox data() 안에 여러 변수를 선언 후 this로 접근.
  -template에서 {{}}로 앞서 변수로 데이터 바인딩.
  -데이터 값과 이미지를 맵핑해서 연동.
  -프롬을 이용해 자식 데이터로 보냄.
### API 키 오류
  -API 키가 활성화되지 않는다고 뜸. 그래서 다른 Weather API 키로 대체함.
### API 키 데이터 구조가 다름.
  -API 키 호출 방법이 아예 다른 것 같아. 일단은 API 호출은 성공했으니 나중에 할 예정.
### 비동기적 호출 경고
  - async와 await 이용.
### dayjs
  - npm install dayjs로 불러옴.
  - computed 함수 선언.

### 커밋 브랜치 실패
  - 1.0.0 branch에 1.0.1 버전 폴더를 커밋함. 
  - 첫술에 배부르리가 없으니.. 그냥 다음에는 실수하지 않겠다 다짐함.

## [1.0.2]

### Added
- 카카오맵 연동
- 카카오맵에 마커 추가. 좌표 확인 기능.
- 마커를 띄울 데이터 MapAxis.json 파일 업로드.
- 마커를 클릭할때마다 관련 정보가 콘솔창에 뜸.

### Map API 403 오류.
  - 카카오 디벨로퍼>내 애플리케이션>카카오 맵에서 활성화 설정을 해줘야 함. 안해서 2시간 동안 계속 코드 수정 반복..
## Map API
- 카카오 디벨로퍼 (Map API)
- 카카오 디벨로퍼에서 로그인 후 애플리케이션 추가하기
- js api 키 복사
- 플랫폼 web 로컬 사이트 링크 입력
- Map.vue 파일 작성.
- 마커로 클릭 시 이벤트 생성. OPEN API DATA로 넘어가서 데이터 출력이 가능함.
- mapaxis.json import


  
